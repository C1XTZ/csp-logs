"use strict";(self.webpackChunkgh_page=self.webpackChunkgh_page||[]).push([[7041],{779:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"changelog/0-1-40","title":"v0.1.40","description":"*   Version ID: 937","source":"@site/docs/changelog/0-1-40.md","sourceDirName":"changelog","slug":"/changelog/0-1-40","permalink":"/csp-logs/changelog/0-1-40","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"v0.1.40"},"sidebar":"versionSidebar","previous":{"title":"v0.1.41","permalink":"/csp-logs/changelog/0-1-41"},"next":{"title":"v0.1.39","permalink":"/csp-logs/changelog/0-1-39"}}');var l=i(4848),t=i(8453);const r={title:"v0.1.40"},o="Changelog",a={},c=[{value:"New features, options and improvements",id:"new-features-options-and-improvements",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Version ID: 937"}),"\n",(0,l.jsx)(n.li,{children:"Size: 44.76 MB"}),"\n"]}),"\n",(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"changelog",children:"Changelog"})}),"\n",(0,l.jsx)(n.h2,{id:"new-features-options-and-improvements",children:"New features, options and improvements"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"New shader replacement option for extra draw call for colored glass, multiplying stuff behind with constant solid color;"}),"\n",(0,l.jsxs)(n.li,{children:["All reflective shaders got new ",(0,l.jsx)(n.code,{children:"extColoredReflection"})," option;","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Colorizes reflection and speculars;"}),"\n",(0,l.jsx)(n.li,{children:"Set to 2 to use txMaps alpha as a mask;"}),"\n",(0,l.jsx)(n.li,{children:"Set to 3 to use invert of txDiffuse alpha as a mask (same as txDetail);"}),"\n",(0,l.jsx)(n.li,{children:"Otherwise, set any value from 0 to 1;"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["MultiMap shaders with sun specular got new ",(0,l.jsx)(n.code,{children:"extColoredBaseReflection"})," option:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"extColoredReflection"})," only affects sun specular and reflection;"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"extColoredBaseReflection"})," affects regular specular;"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Some shaders (",(0,l.jsx)(n.code,{children:"ksPerPixelNM"}),", ",(0,l.jsx)(n.code,{children:"ksPerPixelReflection"}),", ",(0,l.jsx)(n.code,{children:"ksPerPixelMultiMap"})," and some more) got new ",(0,l.jsx)(n.code,{children:"extBounceBack"})," option:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Adds light bouncing straight back to light source (like bicycle reflectors or traffic signs);"}),"\n",(0,l.jsx)(n.li,{children:"Set any value (around 10 in general);"}),"\n",(0,l.jsx)(n.li,{children:"Can use invert of txDiffuse alpha as a mask (same as txDetail);"}),"\n",(0,l.jsxs)(n.li,{children:["New emissive shaders also got this option, as well as ",(0,l.jsx)(n.code,{children:"extBounceBackMask"})," allowing to pick channels in txEmissive;"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["New shader for license plates, with includable config with materials:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Parallax, height is guessed from txDiffuse, with shadows from sun and dynamic lights;"}),"\n",(0,l.jsx)(n.li,{children:"Optional tweaks to lighting and color based on txDiffuse;"}),"\n",(0,l.jsx)(n.li,{children:"Simple emissive mask for better license plate fallback;"}),"\n",(0,l.jsx)(n.li,{children:"Optional extra emissive channel for letters;"}),"\n",(0,l.jsx)(n.li,{children:"Bouncing back light is also supported;"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["New car paint:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Specular settings readjusted for different car paints;"}),"\n",(0,l.jsx)(n.li,{children:"New preset for old car paint;"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Option for shader replacement to assign different shaders depending on original shader;"}),"\n",(0,l.jsx)(n.li,{children:"Fake Shadows FX: works better without shadows, new option for sunlight influence;"}),"\n",(0,l.jsxs)(n.li,{children:["Fixes","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Extra FX motion blur: new better working (and simpler) quality options, fixes;"}),"\n",(0,l.jsx)(n.li,{children:"Car lights: bug with flickering lights fixed;"}),"\n",(0,l.jsx)(n.li,{children:"Chase camera: bug with wrong sound pitch fixed;"}),"\n",(0,l.jsx)(n.li,{children:"Shadows bugging out into large pixels fixed;"}),"\n",(0,l.jsx)(n.li,{children:"Smooth transition between shadow cascades fixed;"}),"\n",(0,l.jsx)(n.li,{children:"Not working pro view fixed;"}),"\n",(0,l.jsx)(n.li,{children:"Shader replacement messing up textures fixed;"}),"\n",(0,l.jsx)(n.li,{children:"Fake Shadows FX: clipping fixed, invalid drawing fixed;"}),"\n",(0,l.jsx)(n.li,{children:"License plate lights: auto-guessing fixed, default parameters adjusted;"}),"\n",(0,l.jsx)(n.li,{children:"Nice Screenshots extension: resolution multiplier works better with motion blur, motion blur accumulation improved;"}),"\n",(0,l.jsx)(n.li,{children:"No more wind-aware dynamic flags by default (fix for Kunos tracks coming soon);"}),"\n",(0,l.jsx)(n.li,{children:"Cars ambient lighting fixed."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);