"use strict";(self.webpackChunkgh_page=self.webpackChunkgh_page||[]).push([[1953],{8268:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var s=i(4848),l=i(8453);const r={title:"v0.1.31"},o=void 0,t={id:"Changelogs/0-1-31",title:"v0.1.31",description:"*   Version ID: 872",source:"@site/docs/Changelogs/0-1-31.md",sourceDirName:"Changelogs",slug:"/Changelogs/0-1-31",permalink:"/ac-csp-changelog-archive/Changelogs/0-1-31",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"v0.1.31"},sidebar:"versionSidebar",previous:{title:"v0.1.32",permalink:"/ac-csp-changelog-archive/Changelogs/0-1-32"},next:{title:"v0.1.30",permalink:"/ac-csp-changelog-archive/Changelogs/0-1-30"}},a={},c=[{value:"Changelog",id:"changelog",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Version ID: 872"}),"\n",(0,s.jsx)(n.li,{children:"Size: 28.86 MB"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Refracting car lights:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Position auto-guessing;"}),"\n",(0,s.jsx)(n.li,{children:"Option for custom bulbs position;"}),"\n",(0,s.jsx)(n.li,{children:"Option for emissive multi-channel behavior;"}),"\n",(0,s.jsx)(n.li,{children:"Performance improvements comparing to preview builds;"}),"\n",(0,s.jsx)(n.li,{children:"Multi-sampling option (increasing cost in four times, so, don\u2019t use it unless it\u2019s really needed);"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["New multi-channel emissive shaders:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"New alternative mode for txEmissive in which each texture channel defines a mask for a certain emissive channel;"}),"\n",(0,s.jsx)(n.li,{children:"Optional procedural mode with four ways of defining areas;"}),"\n",(0,s.jsx)(n.li,{children:"Two types of mirroring allowing to increase amount of channels for symmetrical meshes from 4 to 7;"}),"\n",(0,s.jsx)(n.li,{children:"New shader for dashboards allowing to set up to 25 indicators with a single mesh and material (procedural mode only);"}),"\n",(0,s.jsx)(n.li,{children:"New shader with both \u201c_emissive\u201d and digital screen features, using emissive mask as digital screen mask as well;"}),"\n",(0,s.jsx)(n.li,{children:"New PBR glass shader with \u201c_emissive\u201d features;"}),"\n",(0,s.jsx)(n.li,{children:"Car emissives can specify emissive channel directly, tracks can use \u201cksEmissive1\u201d (\u201cksEmissive2\u201d and so on) syntax;"}),"\n",(0,s.jsxs)(n.li,{children:["Refracting car lights can use proceducally defined light bulbs linked to different channels:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://gfycat.com/deficientfondhorseshoecrab",children:"https://gfycat.com/deficientfondhorseshoecrab"}),";"]}),"\n",(0,s.jsx)(n.li,{children:"Please use this approach instead of dynamic emissive map! That feature might be removed soon."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Procedural grass reworked:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Now with geometric fins;"}),"\n",(0,s.jsx)(n.li,{children:"Fully customizable cascades;"}),"\n",(0,s.jsx)(n.li,{children:"Cars move grass when driving by;"}),"\n",(0,s.jsx)(n.li,{children:"For now, without parameters, that will be returned back soon;"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["New Python functions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Everything reworked using more error-prone approach, fixing a few bugs in the process;"}),"\n",(0,s.jsx)(n.li,{children:"If you\u2019ll notice any incompatibilities in API, please let me know, will fix asap;"}),"\n",(0,s.jsx)(n.li,{children:"Switch to strict mode to get errors if arguments are wrong, instead of patch silently returning default value as it was doing before;"}),"\n",(0,s.jsx)(n.li,{children:"Python profiler app now also shows log and error messages, renamed to \u201cPython Apps Debug\u201d;"}),"\n",(0,s.jsx)(n.li,{children:"Profiling and error handling for Python apps now should work within extra callbacks as well;"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["PBR shaders updated:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Specular ambient added (temporary solution until I\u2019ll figure out how to do it properly);"}),"\n",(0,s.jsx)(n.li,{children:"Works properly with dynamic lights;"}),"\n",(0,s.jsx)(n.li,{children:"Overly occluded reflections fixed;"}),"\n",(0,s.jsx)(n.li,{children:"New option for txDetailNormal in PBR format, containing normals, occlusion and specular level (inverted roughness);"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Lights guessing now would work with a single mesh for all four turning indicators;"}),"\n",(0,s.jsx)(n.li,{children:"Dynamic navigators;"}),"\n",(0,s.jsxs)(n.li,{children:["INIpp format updated:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Breaking change: indices now start with 1 instead of 0, to make it less awkward when working with expressions (which were already using 1 because of Lua);"}),"\n",(0,s.jsxs)(n.li,{children:["New features:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Generators;"}),"\n",(0,s.jsx)(n.li,{children:"Refer to mixins anywhere, with inline parameters and optional shorter syntax;"}),"\n",(0,s.jsx)(n.li,{children:"Auto-indexing values;"}),"\n",(0,s.jsx)(n.li,{children:"Vectors support;"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"A lot of bugfixes;"}),"\n",(0,s.jsx)(n.li,{children:"Twice as fast;"}),"\n",(0,s.jsx)(n.li,{children:"Now with automatic tests to ensure new features won\u2019t break anything!"}),"\n",(0,s.jsx)(n.li,{children:"For more information, check out INIpp repo and its README;"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Includable configs with templates:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"New \u201ccustom_emissive.ini\u201d allowing to set turning lights and what not in just a couple of lines;"}),"\n",(0,s.jsx)(n.li,{children:"New \u201cselflighting.ini\u201d helping to speed up a bit adding extra light sources for headlights lighting up the car;"}),"\n",(0,s.jsx)(n.li,{children:"Glass: brightness adjustment option, option to use normal map and, if needed, to use alpha-channel from normal map;"}),"\n",(0,s.jsxs)(n.li,{children:["Car paints: tiling fix is now optional, use ",(0,s.jsx)(n.code,{children:"ApplyTilingFix = 0"})," to disable it;"]}),"\n",(0,s.jsxs)(n.li,{children:["Interior PBR materials: new ",(0,s.jsx)(n.code,{children:"Material_LeatherDetailed"})," template with PBR detail texture, new options;"]}),"\n",(0,s.jsx)(n.li,{children:"A lot of new stuff for navigators;"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Extra FX: new ",(0,s.jsx)(n.code,{children:"MASK_GBUFFER"})," option for headlights glass, allowing to get local reflections from behind it, but dimmer;"]}),"\n",(0,s.jsx)(n.li,{children:"Alpha-to-coverage thing rolled back for now;"}),"\n",(0,s.jsx)(n.li,{children:"Dirt particles use track colors from Tyres FX, this time properly;"}),"\n",(0,s.jsx)(n.li,{children:"A bit of tonemapping for SSLR to reduce aliasing caused by too bright objects being reflected;"}),"\n",(0,s.jsxs)(n.li,{children:["Analog odometers:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Now background color is used properly;"}),"\n",(0,s.jsx)(n.li,{children:"Use fonts from \u201ccontent/fonts\u201d;"}),"\n",(0,s.jsx)(n.li,{children:"Options for scaling fonts vertically and for a vertical offset for fonts;"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Car inputs:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Options ",(0,s.jsx)(n.code,{children:"INPUT_ADD"})," and ",(0,s.jsx)(n.code,{children:"INPUT_MULT"})," (not really needed with ",(0,s.jsx)(n.code,{children:"INPUT_LUT"}),", but it might be easier sometimes to just use a simple way of setting it);"]}),"\n",(0,s.jsxs)(n.li,{children:["Options ",(0,s.jsx)(n.code,{children:"INPUT_THRESHOLD_LOWER_INC"})," and ",(0,s.jsx)(n.code,{children:"INPUT_THRESHOLD_UPPER_INC"})," using less-or-equal or greater-or-equal check;"]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"SEATBELT"})," input (free camera with hidden driver for now);"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"SSLR works better with semi-transparent objects (not as bad as before) like semi-trasparent puddles with new water shader;"}),"\n",(0,s.jsx)(n.li,{children:"Adaptive shadow boundaries now should shift closer if something is very close to camera;"}),"\n",(0,s.jsx)(n.li,{children:"New digital screen shader acting like overlay for existing meshes;"}),"\n",(0,s.jsx)(n.li,{children:"Option for terrain casting shadows: will cast shadows as double-sided when sun is low;"}),"\n",(0,s.jsx)(n.li,{children:"Option for disabling track cameras LOD distance multiplier, enabled by default;"}),"\n",(0,s.jsxs)(n.li,{children:["Option for filling missing textures in ",(0,s.jsx)(n.code,{children:"SHADER_REPLACEMENT_..."}),";"]}),"\n",(0,s.jsx)(n.li,{children:"Option to disable side culling;"}),"\n",(0,s.jsx)(n.li,{children:"Water shader: option to use alpha-channel from txNormal;"}),"\n",(0,s.jsx)(n.li,{children:"Default frequency for blinking emissives changed to 2.2 Hz (apart from turning lights);"}),"\n",(0,s.jsx)(n.li,{children:"New car paints got damages and dirt back;"}),"\n",(0,s.jsx)(n.li,{children:"Mesh filters in cars: filter by LOD;"}),"\n",(0,s.jsxs)(n.li,{children:["New options for car lights:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OFFSET"})," and ",(0,s.jsx)(n.code,{children:"OFF_OFFSET"}),", three numbers, for fine-tuning position without reassigning guessed value;"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ONESIDED"}),", either ",(0,s.jsx)(n.code,{children:"LEFT"})," or ",(0,s.jsx)(n.code,{children:"RIGHT"}),": same as setting ",(0,s.jsx)(n.code,{children:"MIRROR=0"})," and ",(0,s.jsx)(n.code,{children:"POSITION=X, \u2026"}),", where X was old ",(0,s.jsx)(n.code,{children:"MIRROR"})," value, but guessing-friendly;"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"PREFER_FRONT"}),", for position guessing (if mesh was split in two bits, front and rear) or picking custom emissive properly;"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Option to add extra sharpness to local reflections for certain materials or meshes;"}),"\n",(0,s.jsxs)(n.li,{children:["Custom analog instruments:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"POS_OFFSET_START"})," and ",(0,s.jsx)(n.code,{children:"POS_OFFSET_END"})," fixed;"]}),"\n",(0,s.jsxs)(n.li,{children:["Option for scaling with ",(0,s.jsx)(n.code,{children:"SCALE_START"})," and ",(0,s.jsx)(n.code,{children:"SCALE_END"}),";"]}),"\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"LOWER_BOUND"})," option;"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"A lot of various fixes and stability improvements."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var s=i(6540);const l={},r=s.createContext(l);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);